diff --git a/sds.h b/sds.h
index 13be75a..b041571 100644
--- a/sds.h
+++ b/sds.h
@@ -41,36 +41,38 @@
 
 typedef char *sds;
 
+#define PACK( __Declaration__ ) __pragma( pack(push, 1) ) __Declaration__ __pragma( pack(pop) )
+
 /* Note: sdshdr5 is never used, we just access the flags byte directly.
  * However is here to document the layout of type 5 SDS strings. */
-struct __attribute__ ((__packed__)) sdshdr5 {
+PACK(struct sdshdr5 {
     unsigned char flags; /* 3 lsb of type, and 5 msb of string length */
     char buf[];
-};
-struct __attribute__ ((__packed__)) sdshdr8 {
+});
+PACK(struct sdshdr8 {
     uint8_t len; /* used */
     uint8_t alloc; /* excluding the header and null terminator */
     unsigned char flags; /* 3 lsb of type, 5 unused bits */
     char buf[];
-};
-struct __attribute__ ((__packed__)) sdshdr16 {
+});
+PACK(struct sdshdr16 {
     uint16_t len; /* used */
     uint16_t alloc; /* excluding the header and null terminator */
     unsigned char flags; /* 3 lsb of type, 5 unused bits */
     char buf[];
-};
-struct __attribute__ ((__packed__)) sdshdr32 {
+});
+PACK(struct sdshdr32 {
     uint32_t len; /* used */
     uint32_t alloc; /* excluding the header and null terminator */
     unsigned char flags; /* 3 lsb of type, 5 unused bits */
     char buf[];
-};
-struct __attribute__ ((__packed__)) sdshdr64 {
+});
+PACK(struct sdshdr64 {
     uint64_t len; /* used */
     uint64_t alloc; /* excluding the header and null terminator */
     unsigned char flags; /* 3 lsb of type, 5 unused bits */
     char buf[];
-};
+});
 
 #define SDS_TYPE_5  0
 #define SDS_TYPE_8  1
